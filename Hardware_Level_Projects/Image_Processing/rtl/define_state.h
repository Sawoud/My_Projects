`ifndef DEFINE_STATE

// for top state - we have more states than needed
typedef enum logic [1:0] {
	S_IDLE,
	S_UART_RX, 
	S_M1,
	S_M2
} top_state_type;

typedef enum logic [5:0] {
	S_M1_IDLE,
	S_M1_LEADIN_1,
	S_M1_LEADIN_2,
	S_M1_LEADIN_3,
	S_M1_LEADIN_4,
	S_M1_LEADIN_5,
	S_M1_LEADIN_6,
	S_M1_LEADIN_7,
	S_M1_LEADIN_8,
	S_M1_LEADIN_9,
	S_M1_LEADIN_10,
	S_M1_LEADIN_11,
	S_M1_LEADIN_12,
	S_M1_1,
	S_M1_2,
	S_M1_3,
	S_M1_4,
	S_M1_5,
	S_M1_6,
	S_M1_LEADOUT_1,
	S_M1_LEADOUT_2,
	S_M1_LEADOUT_3,
	S_M1_LEADOUT_4,
	S_M1_LEADOUT_5,
	S_M1_LEADOUT_6,
	S_M1_LEADOUT_7,
	S_M1_LEADOUT_8,
	S_M1_LEADOUT_9,
	S_M1_LEADOUT_10,
	S_M1_LEADOUT_11,
	S_M1_LEADOUT_12
} M1_upsampling_state_type;

typedef enum logic [4:0] {
	CT_IDLE,
	CT_LEADIN_1,
	CT_LEADIN_2,
	CT_LEADIN_3,
	CT_LEADIN_4,
	CT_LEADIN_5,
	CT_LEADIN_6,
	CT_LEADIN_7,
	CT_LEADIN_8,
	CT_LEADIN_9,
	CT_LEADIN_10,
	CT_LEADIN_11,
	CT_1,
	CT_2,
	CT_3,
	CT_4,
	CT_5,
	CT_6,
	CT_7,
	CT_8,
	CT_LEADOUT_1,
	CT_LEADOUT_2,
	CT_LEADOUT_3,
	CT_LEADOUT_4,
	CT_LEADOUT_5,
	CT_LEADOUT_6,
	CT_LEADOUT_7,
	CT_LEADOUT_8,
	CT_LEADOUT_9,
	CT_LEADOUT_10,
	CT_LEADOUT_11
}CT_state;

typedef enum logic [3:0] {
	FS_IDLE,
	FS_LEADIN_1,
	FS_LEADIN_2,
	FS_LEADIN_3,
	FS_LEADIN_4,
	FS_LEADIN_5,
	FS_1,
	FS_2,
	FS_LEADOUT_1,
	FS_LEADOUT_2,
	FS_LEADOUT_3,
	FS_LEADOUT_4,
	FS_LEADOUT_5
}Fs_prime_states;

typedef enum logic [3:0] {
	S_CS_IDLE,
	S_CS_L1,
	S_CS_L2,
	S_CS_L3,
	S_CS_L4,
	S_CS_1,
	S_CS_2,
	S_CS_3,
	S_CS_4,
	S_CS_5,
	S_CS_6,
	S_CS_7,
	S_CS_8
} CS_state_type;

typedef enum logic [2:0] {
	S_WS_IDLE,
	S_WS1,
	S_WS2,
	S_WS3,
	S_WS4,
	S_WS5,
	S_WS6
} WS_state_type;

typedef enum logic [3:0] {
	S_M2_IDLE,
	S_M2_LEADIN_1,
	S_M2_LEADIN_2,
	S_M2_1,
	S_M2_2,
	S_M2_LEADOUT_1,
	S_M2_LEADOUT_2
} M2_state;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

parameter int C [8] [8] = 
'{'{16'd1448,16'd1448,16'd1448,16'd1448,16'd1448,16'd1448,16'd1448,16'd1448},
	'{16'd2008,16'd1702,16'd1137,16'd399,-16'd399,-16'd1137,-16'd1702,-16'd2008},
	'{16'd1892,16'd783,-16'd783,-16'd1892,-16'd1892,-16'd783,16'd783,16'd1892},
	'{16'd1702,-16'd399,-16'd2008,-16'd1137,16'd1137,16'd2008,16'd399,-16'd1702},
	'{16'd1448,-16'd1448,-16'd1448,16'd1448,16'd1448,-16'd1448,-16'd1448,16'd1448},
	'{16'd1137,-16'd2008,16'd399,16'd1702,-16'd1702,-16'd399,16'd2008,-16'd1137},
	'{16'd783,-16'd1892,16'd1892,-16'd783,-16'd783,16'd1892,-16'd1892,16'd783},
	'{16'd399,-16'd1137,16'd1702,-16'd2008,16'd2008,-16'd1702,16'd1137,-16'd399}};

parameter int CT [8] [8] = 
'{'{16'd1448,16'd2008,16'd1892,16'd1702,16'd1448,16'd1137,16'd783,16'd399},
'{16'd1448,16'd1702,16'd783,-16'd399,-16'd1448,-16'd2008,-16'd1892,-16'd1137},
'{16'd1448,16'd1137,-16'd783,-16'd2008,-16'd1448,16'd399,16'd1892,16'd1702},
'{16'd1448,16'd399,-16'd1892,-16'd1137,16'd1448,16'd1702,-16'd783,-16'd2008},
'{16'd1448,-16'd399,-16'd1892,16'd1137,16'd1702,-16'd1702,-16'd783,16'd2008},
'{16'd1448,-16'd1137,-16'd783,16'd2008,-16'd1448,-16'd399,16'd1892,-16'd1702},
'{16'd1448,-16'd1702,16'd783,16'd399,-16'd1448,16'd2008,-16'd1892,16'd1137},
'{16'd1448,-16'd2008,16'd1892,-16'd1702,16'd1448,-16'd1137,16'd783,-16'd399}};

parameter 
   VIEW_AREA_LEFT = 160,
   VIEW_AREA_RIGHT = 480,
   VIEW_AREA_TOP = 120,
   VIEW_AREA_BOTTOM = 360,
	Y_SEGMENT_BASE = 0,
	U_SEGMENT_BASE = 38400,
	V_SEGMENT_BASE = 57600,
	RGB_SEGMENT_BASE = 146944,
	a00 = 76284,
	a02 = 104595,
	a11 = -25624,
	a12 = -53281,
	a21 = 132251,
// vars for M2
	PREIDCT_SEGMENT_BASE = 76800;

`define DEFINE_STATE 1
`endif